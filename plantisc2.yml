---
- hosts: plantisc2
  become: yes
  tasks:
  - name: Allow http
    ufw:
      rule: allow
      port: 80
      proto: tcp
    become: yes
  - name: Allow and https
    ufw:
      rule: allow
      port: 443
      proto: tcp
    become: yes

  - name: Install Packages
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: "latest"
    with_items:
      - unzip
      - git
      - mcrypt
      - nginx
      - php7.0-cli
      - php7.0-curl
      - php7.0-fpm
      - php7.0-intl
      - php7.0-json
      - php7.0-mcrypt
      - php7.0-sqlite3
      - sqlite3
      - mysql-server
      - mysql-client
      - php7.0-mysql
      - python-mysqldb
      - pwgen
    notify:
      - restart php7.0-fpm
      - restart nginx

  - name: Ensure php7.0-fpm cgi.fix_pathinfo=0
    lineinfile:
      dest: /etc/php/7.0/fpm/php.ini
      regexp: '^(.*)cgi.fix_pathinfo='
      line: cgi.fix_pathinfo=0
    notify:
      - restart php7.0-fpm
      - restart nginx

  - name: enable php7.0 mcrypt module
    shell: phpenmod mcrypt
    args:
      creates: /etc/php/7.0/cli/conf.d/20-mcrypt.ini

  - name: create /var/www/ directory
    file:
      dest: /var/www/
      state: directory
      owner: www-data
      group: www-data
      mode: 0700

  - name: Clone git repository
    git:
      dest: /var/www/plantisc2
      repo: https://github.com/mtorrisi/test.git
      update: yes
    become: yes
    become_user: www-data

  - name: Configure nginx
    template:
      src: nginx.conf
      dest: /etc/nginx/sites-available/default
    notify:
      - restart php7.0-fpm
      - restart nginx

  - name: Copy public key into /var/www
    authorized_key:
      user: www-data
      key: "{{ lookup('file', 'deploykey.pub') }}"

  - name: Set www-data user shell
    user:
      name: www-data
      shell: /bin/bash


  - name: Create MySQL DB
    mysql_db:
      name: tissue
      state: present

  - name: Generate DB password
    shell: pwgen -C -n -s 32 1
    args:
      creates: /var/www/plantisc2/.dbpw
    register: dbpwd
    # - debug: msg="the echo was "{{ dbpwd.stdout }}""

  - name: Create MySQL User
    mysql_user:
      name: tissue
      password: {{ dbpwd.stdout }}
      priv: tissue.*:ALL
      state: present
    when: dbpwd.changed

  - name: set DB_DATABASE
    lineinfile:
      dest: /var/www/plantisc2/.env
      regexp: '^DB_DATABASE='
      line: DB_DATABASE=tissue

  - name: set DB_USERNAME
    lineinfile:
      dest: /var/www/plantisc2/.env
      regexp: '^DB_USERNAME='
      line: DB_USERNAME=tissue

  - name: set DB_PASSWORD
    lineinfile:
      dest: /var/www/plantisc2/.env
      regexp: '^DB_PASSWORD='
      line: DB_PASSWORD={{ dbpwd.stdout }}
    when: dbpwd.changed

  - name: Save dbpw file
    lineinfile:
      dest: /var/www/plantisc2/.dbpw
      line: "{{ dbpwd.stdout }}"
      create: yes
      state: present
    become: yes
    become_user: www-data
    when: dbpwd.changed

  handlers:
    - name: restart php7.0-fpm
      service: name=php7.0-fpm state=restarted

    - name: restart nginx
      service: name=nginx state=restarted
